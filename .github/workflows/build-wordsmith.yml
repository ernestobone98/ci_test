name: Build and Deploy
on:
  pull_request:
    types: [labeled]
jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/web:${{ github.event.pull_request.head.sha }} .
        working-directory: ./web
      - name: Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/web:${{ github.event.pull_request.head.sha }}
      - name: Notify
        run: echo "FE pushed successfully ðŸŽ‰"
  build-db:
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/db:${{ github.event.pull_request.head.sha }} .
        working-directory: ./db
      - name: Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/db:${{ github.event.pull_request.head.sha }}
      - name: Notify
        run: echo "DB schema pushed successfully ðŸŽ‰"
  build-words:
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/words:${{ github.event.pull_request.head.sha }} .
        working-directory: ./words
      - name: Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/words:${{ github.event.pull_request.head.sha }}
      - name: Notify
        run: echo "Mini Java server pushed successfully ðŸŽ‰"
